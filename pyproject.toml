[tool.mypy]
python_version = "3.11"
explicit_package_bases = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
# Allow some flexibility for FastAPI
disallow_any_generics = false
# Ignore missing imports for some packages
[[tool.mypy.overrides]]
module = [
    "alembic.*",
    "jose.*",
    "passlib.*"
]
ignore_missing_imports = true

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "A",  # flake8-builtins
    "COM", # flake8-commas
    "DTZ", # flake8-datetimez
    "T20", # flake8-print
    "TCH", # flake8-type-checking
    "ARG", # flake8-unused-arguments
    "PIE", # flake8-pie
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "Q",   # flake8-quotes
    "RSE", # flake8-raise
    "RET", # flake8-return
    "SLF", # flake8-self
    "SLOT", # flake8-slots
    "TRY", # flake8-try
    "NPY", # flake8-numpy
    "AIR", # flake8-import-conventions
    "PERF", # flake8-perf
    "PTH", # flake8-use-pathlib
    "LOG", # flake8-logging-format
    "RUF", # ruff-specific rules
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "UP017",  # Use datetime.UTC alias - disabled for Python 3.11 compatibility
    "TCH001", # Type checking imports should be in TYPE_CHECKING block
    "TCH002", # Type checking imports should be in TYPE_CHECKING block
    "TCH003", # Type checking imports should be in TYPE_CHECKING block
    "ARG001", # Unused function argument
    "SIM105", # Use contextlib.suppress instead of try-except-pass
    "RUF012", # Mutable class attributes should be annotated with typing.ClassVar
]

[tool.ruff.lint.isort]
known-first-party = ["app"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.black]
line-length = 88
target-version = ['py311']
 