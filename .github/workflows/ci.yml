name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: üß™ Run Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: dev_password_123
          POSTGRES_DB: fastapi_template_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      CI: true
      RUNNING_IN_CI: true
      DATABASE_URL: postgresql://postgres:dev_password_123@localhost:5432/fastapi_template_test
      ASYNC_DATABASE_URL: postgresql+asyncpg://postgres:dev_password_123@localhost:5432/fastapi_template_test
      SECRET_KEY: test-secret-key-for-ci
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      BACKEND_CORS_ORIGINS: '["http://localhost:3000","http://localhost:8080","http://localhost:4200"]'
      FIRST_SUPERUSER: admin@example.com
      FIRST_SUPERUSER_PASSWORD: testpassword123
      # Celery configuration for testing
      ENABLE_CELERY: true
      CELERY_TASK_ALWAYS_EAGER: true
      CELERY_TASK_EAGER_PROPAGATES: true
      CELERY_BROKER_URL: redis://localhost:6379/1
      CELERY_RESULT_BACKEND: redis://localhost:6379/1

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for PostgreSQL
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          sleep 10
          echo "PostgreSQL should be ready now"

      - name: Run tests
        run: |
          echo "Database URL: $DATABASE_URL"
          echo "Async Database URL: $ASYNC_DATABASE_URL"
          echo "Running in CI environment: $CI"
          echo "Starting tests with timeout..."
          timeout 300 pytest tests/ --ignore=tests/template_tests/test_celery_mocked.py --ignore=tests/template_tests/test_celery_api.py --ignore=tests/template_tests/test_celery_health.py -k "not test_permanently_delete_accounts_task_endpoint and not test_file_logging_enabled and not test_log_level_configuration and not test_enforce_session_limit and not test_revoke_all_sessions and not test_revoke_all_sessions_endpoint" -v --asyncio-mode=auto --cov=app --cov-report=term-missing --cov-fail-under=60 --tb=short

  lint:
    name: üîç Lint (ruff)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Ruff and Black
        run: |
          echo "Running ruff check..."
          ruff check .
          echo "Running black format check..."
          black --check .

  type-check:
    name: üß† Type Check (mypy)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Mypy
        run: |
          mypy . 